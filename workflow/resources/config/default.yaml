__definitions__:
  - |
    def get_events(event_type, include_ffpe=False):
        if event_type == "somatic_or_germline":
          events = ["somatic_tumor_high", "somatic_tumor_low", "germline"]
        if event_type == "loh":
          events = ["loh", "loh_or_amplification"]
        if include_ffpe:
          events.append("ffpe_artifact")
        return events
  - |
    def get_description(event_type):
        if event_type == "somatic_or_germline":
          return "somatic or germline variants"
        if event_type == "loh":
          return "LOH or amplification of alt allele"

samples: config/samples.tsv

units: config/units.tsv

# Optional BED file with target regions
#target_regions: "raw/V5UTR.bed"

ref:
  # Number of chromosomes to consider for calling.
  # The first n entries of the FASTA will be considered.
  n_chromosomes: 25
  # Ensembl species name
  species: homo_sapiens
  # Ensembl release
  release: 111
  # Genome build
  build: GRCh38
  pangenome:
    # if active, reads will be aligned to given pangenome instead of to the linear reference genome
    # Important: this is only supported for homo_sapiens so far
    activate: true
    source: hprc
    version: v1.1

primers:
  trimming:
    # path to fasta files containing primer sequences
    primers_fa1: ""
    primers_fa2: ""
    # optional primer file allowing to define primers per sample
    # overwrites primers_fa1 and primers_fa2
    # the tsv file requires three fields: panel, fa1 and fa2 (optional)
    tsv: ""
    # Mean insert size between the outer primer ends.
    # If 0 or not set the bowtie default value of 250 will be used
    library_length: 0

# Estimation of tumor mutational burden.
mutational_burden:
  activate: true
  # Plotting modes - hist (stratified histogram)
  # or curve (stratified curve)
  mode:
    - curve
  events:
    - somatic_tumor_low
    - somatic_tumor_high

mutational_signatures:
  activate: true
  events:
    - present_variants

# Sets the minimum average coverage for each gene.
# Genes with lower average coverage will not be concidered in gene coverage datavzrd report
# If not present min_avg_coverage will be set to 0 rendering all genes.
gene_coverage:
  min_avg_coverage: 5

# printing of variants in a matrix, sorted by recurrence
report:
  # if stratificatio is deactivated, one oncoprint for all
  # samples will be created.
  activate: true
  max_read_depth: 250
  stratify:
    activate: false
    # select a sample sheet column for stratification
    by-column: condition

# printing of variants in a table format
tables:
  activate: true
  output:
    event_prob: true
    observations: true
    short_observations: true
  generate_excel: true

calling:
  delly:
    activate: true
  freebayes:
    activate: true
  # See https://varlociraptor.github.io/docs/calling/#generic-variant-calling
  scenario: config/scenario.yaml
  filter:
    candidates: >-
      not any(
        (consequence in set(['intergenic variant', 'upstream_gene_variant', 'downstream_gene_variant']))
        for consequence in ANN['Consequence'].split("&")
      ) and
      not ('intron_variant' in ANN['Consequence'] and not 'splice' in ANN['Consequence'])
    af_highly_relevant: >-
      (FORMAT['AF']['tumor'] >= 0.05 and (ANN['gnomADg_AF'] is NA or ANN['gnomADg_AF'] < 0.01))
    revel_malign: >-
      (ANN['REVEL'] is NA or ANN['REVEL'] >= 0.5)
    any_score_malign: >-
      (ANN['SpliceAI_pred_DS_AG'] > 0.5 or ANN['SpliceAI_pred_DS_AL'] > 0.5 or ANN['SpliceAI_pred_DS_DG'] > 0.5 or 
      ANN['SpliceAI_pred_DS_DL'] > 0.5) or (ANN['am_pathogenicity'] is NA or ANN['am_pathogenicity'] >= 0.34) or 
      (ANN['REVEL'] is NA or ANN['REVEL'] >= 0.5)
    clinsig_not_benign: >-
      len(set(['likely benign', 'benign']) & set(ANN['CLIN_SIG'])) == 0
    impact_moderate: >-
      ANN['IMPACT'] == 'MODERATE'
    impact_high: >-
      ANN['IMPACT'] == 'HIGH'
    novel: >-
      not (ID and ID.startswith('rs'))
    pathogenic_risk_factor_drug_response: >-
      (not {'risk_factor','pathogenic', 'drug_response'}.isdisjoint(ANN['CLIN_SIG'])) and 
      (ANN['IMPACT'] in {'LOW', 'MODERATE', 'HIGH'}) and (ANN['REVEL'] is NA or ANN['REVEL'] >= 0.5)
    potentially_pathogenic: >-
      (ANN['IMPACT'] in {'LOW', 'MODERATE', 'HIGH'}) and (
      ((not {'risk_factor', 'pathogenic', 'drug_response'}.isdisjoint(ANN['CLIN_SIG'])) and ANN['REVEL'] is not NA and ANN['REVEL'] < 0.5) or (
      'likely_pathogenic' in ANN['CLIN_SIG'] and (
      ({'risk_factor', 'pathogenic', 'drug_response'}.isdisjoint(ANN['CLIN_SIG'])) and (ANN['REVEL'] is NA or ANN['REVEL'] >= 0.5))))
    cancer_relevant: >-
      ANN['Consequence'] != 'synonymous_variant'
    splice_mutation: >-
      'splice' in ANN['Consequence']
    cancer_genes:
      aux-files:
        cancer_genes: ../resources/config/gene-sets/cancer-genes.txt
      expression: "ANN['SYMBOL'] in AUX['cancer_genes']"
    drugable_genes:
      aux-files:
        drugable_genes: ../resources/config/gene-sets/drugable_genes.txt
      expression: "ANN['SYMBOL'] in AUX['drugable_genes']"
    pi3k_pathway:
      aux-files:
        pathway_genes: ../resources/config/gene-sets/PI3K_AKT_mTOR.txt
      expression: >-
        ANN['SYMBOL'] in AUX['pathway_genes']
    raf_pathway:
      aux-files:
        pathway_genes: ../resources/config/gene-sets/RAF_MEK_ERK.txt
      expression: >-
        ANN['SYMBOL'] in AUX['pathway_genes']
    cell_cycle:
      aux-files:
        cell_cycle: ../resources/config/gene-sets/Cell_Cycle.txt
      expression: "ANN['SYMBOL'] in AUX['cell_cycle']"
    dna_damage_response:
      aux-files:
        dna_damage_response: ../resources/config/gene-sets/DNA_Damage_Response.txt
      expression: "ANN['SYMBOL'] in AUX['dna_damage_response']"
    g1_topart:
      aux-files:
        g1_topart: ../resources/config/gene-sets/G1_TOPART.txt
      expression: "ANN['SYMBOL'] in AUX['g1_topart']"
    tyrosine_kinases:
      aux-files:
        tyrosine_kinases: ../resources/config/gene-sets/Tyrosine_Kinases.txt
      expression: "ANN['SYMBOL'] in AUX['tyrosine_kinases']"
  fdr-control:
    threshold: 0.05
    mode: local-smart
    events:
      present_variants:
        types: ["fusions"]
        varlociraptor: ["somatic_tumor_high", "somatic_tumor_low", "germline"]
        desc: Present fusions
        labels:
          callset: present
          impact: all
        subcategory: somatic fusions
      ?for event_type in ["somatic_or_germline", "loh"]:
        ?f"{event_type}_likely_high_relevance":
          types: ["variants"]
          varlociraptor: ?get_events(event_type)
          filter:
            - cancer_relevant
            - cancer_genes
            - af_highly_relevant
            - any_score_malign
            - clinsig_not_benign
          sort:
            - "binned max vaf"
            - impact
            - revel
          desc: ?f"{get_description(event_type)} with low to high impact but gnomAD AF <0.01 and VAF 0.1<"
          labels:
            callset: likely high relevance
            impact: low, moderate, high
          subcategory: ?get_description(event_type)

        ?f"{event_type}_impact_moderate_novel":
          types: ["variants"]
          varlociraptor: ?get_events(event_type)
          filter:
            - af_highly_relevant
            - impact_moderate
            - novel
            - revel_malign
          sort:
            - "binned max vaf"
            - revel
            - "tumor: allele frequency"
          desc: |
            ?f"Novel {get_description(event_type)} with moderate impact."
          labels:
            callset: VUS
            impact: moderate
          subcategory: ?get_description(event_type)

        ?f"{event_type}_impact_high_novel":
          types: ["variants"]
          varlociraptor: ?get_events(event_type)
          filter:
            - af_highly_relevant
            - impact_high
            - novel
            - revel_malign
          sort:
            - "binned max vaf"
            - revel
            - "tumor: allele frequency"
          desc: |
            ?f"Novel {get_description(event_type)} with high impact."
          labels:
            callset: VUS
            impact: high
          subcategory: ?get_description(event_type)

        ?f"{event_type}_pathogenic_risk_factor_drug_response":
          types: ["variants"]
          varlociraptor: ?get_events(event_type, include_ffpe=True)
          filter:
            - pathogenic_risk_factor_drug_response
            - revel_malign
            - af_highly_relevant
          sort:
            - "binned max vaf"
            - impact
            - revel
            - "tumor: allele frequency"
          desc: |
            ?f"{get_description(event_type)} being pathogenic or risk factor high and a revel score >= 0.5 if available."
          labels:
            callset: pathogenic, risk factor, or drug response
            impact: low, moderate, high
          subcategory: ?get_description(event_type)

        ?f"{event_type}_potentially_pathogenic_risk_factor_drug_response":
          types: ["variants"]
          varlociraptor: ?get_events(event_type, include_ffpe=True)
          filter:
            - potentially_pathogenic
            - af_highly_relevant
          sort:
            - "binned max vaf"
            - impact
            - revel
            - "tumor: allele frequency"
          desc: |
            ?f"{get_description(event_type)} being pathogenic or risk factor high but having a weak revel score."
          labels:
            callset: potentially pathogenic, risk factor, or drug response
            impact: low, moderate, high
          subcategory: ?get_description(event_type)

        ?f"{event_type}_splice_variants":
          types: ["variants"]
          varlociraptor: ?get_events(event_type)
          filter:
            - af_highly_relevant
            - splice_mutation
            - revel_malign
            - novel
          sort:
            - "binned max vaf"
            - impact
            - revel
          desc: ?f"{get_description(event_type)} close to splice sites."
          labels:
            callset: novel splice site variants
            impact: any
          subcategory: ?get_description(event_type)

        ?f"{event_type}_cancer_genes":
          types: ["variants"]
          varlociraptor: ?get_events(event_type)
          filter:
            - af_highly_relevant
            - cancer_relevant
            - cancer_genes
          sort:
            - "binned max vaf"
            - impact
            - revel
          desc: ?f"{get_description(event_type)} affecting known cancer genes with low to high impact."
          labels:
            callset: cancer genes
            impact: low, moderate, high
          subcategory: ?get_description(event_type)

        ?f"{event_type}_drugable_genes":
          types: ["variants"]
          varlociraptor: ?get_events(event_type)
          filter:
            - cancer_relevant
            - drugable_genes
            - af_highly_relevant
          sort:
            - "binned max vaf"
            - impact
            - revel
          desc: ?f"{get_description(event_type)} affecting known drugable genes with low to high impact."
          labels:
            callset: drugable genes
            impact: low, moderate, high
          subcategory: ?get_description(event_type)

        ?f"{event_type}_pi3k_pathway":
          types: ["variants"]
          varlociraptor: ?get_events(event_type)
          filter:
            - af_highly_relevant
            - cancer_relevant
            - pi3k_pathway
          sort:
            - impact
            - "binned max vaf"
            - revel
          desc: |
            ?f"{get_description(event_type)} affecting PI3K-AKT-mTOR pathway genes, sorted by impact and revel scores while discarding synonymous variants."
          labels:
            callset: PI3K-AKT-mTOR pathway
            impact: low, moderate, high
          subcategory: ?get_description(event_type)

        ?f"{event_type}_raf_pathway":
          types: ["variants"]
          varlociraptor: ?get_events(event_type)
          filter:
            - af_highly_relevant
            - cancer_relevant
            - raf_pathway
          sort:
            - "binned max vaf"
            - impact
            - revel
          desc: |
            ?f"{get_description(event_type)} affecting RAF-MEK-ERK pathway genes, sorted by impact and revel scores while discarding synonymous variants."
          labels:
            callset: RAF-MEK-ERK pathway
            impact: low, moderate, high
          subcategory: ?get_description(event_type)

        ?f"{event_type}_cell_cycle":
          types: ["variants"]
          varlociraptor: ?get_events(event_type)
          filter:
            - af_highly_relevant
            - cancer_relevant
            - cell_cycle
          sort:
            - "binned max vaf"
            - impact
            - revel
          desc: |
            ?f"{get_description(event_type)} affecting cell cycle genes with low to high impact."
          labels:
            callset: cell cycle
            impact: low, moderate, high
          subcategory: ?get_description(event_type)

        ?f"{event_type}_dna_damage_response":
          types: ["variants"]
          varlociraptor: ?get_events(event_type)
          filter:
            - af_highly_relevant
            - cancer_relevant
            - dna_damage_response
          sort:
            - "binned max vaf"
            - impact
            - revel
          desc: |
            ?f"{get_description(event_type)} affecting dna damage resonse genes with low to high impact."
          labels:
            callset: dna damage response
            impact: low, moderate, high
          subcategory: ?get_description(event_type)

        ?f"{event_type}_g1_topart":
          types: ["variants"]
          varlociraptor: ?get_events(event_type)
          filter:
            - af_highly_relevant
            - cancer_relevant
            - g1_topart
          sort:
            - "binned max vaf"
            - impact
            - revel
          desc: |
            ?f"{get_description(event_type)} affecting G1 topart genes with low to high impact."
          labels:
            callset: G1 topart
            impact: low, moderate, high
          subcategory: ?get_description(event_type)

        ?f"{event_type}_tyrosine_kinases":
          types: ["variants"]
          varlociraptor: ?get_events(event_type)
          filter:
            - af_highly_relevant
            - cancer_relevant
            - tyrosine_kinases
          sort:
            - "binned max vaf"
            - impact
            - revel
          desc: |
            ?f"{get_description(event_type)} affecting tyrosine kinases genes with low to high impact."
          labels:
            callset: tyrosine kinases
            impact: low, moderate, high
          subcategory: ?get_description(event_type)

# If calc_consensus_reads is activated duplicates will be merged
remove_duplicates:
  activate: true

# Experimental: calculate consensus reads from PCR duplicates.
# if 'remove_duplicates' is deactivate only overlapping pairs will be merged
calc_consensus_reads:
  activate: false


population:
  db:
    # Set to true to contiuously update a population database (BCF) with each new sample.
    activate: false
    # Path to a BCF file to be used to collect variants across mutliple runs of the pipeline.
    # The path can be outside of the workdir. Snakemake will update the file with each new
    # sample that occurs.
    path: ...
    # Varlociraptor events to be used.
    alias: tumor
    fdr: 0.05
    events:
      - somatic_tumor_high
      - somatic_tumor_medium

annotations:
  vcfs:
    activate: true
    # annotate with known variants from ensembl
    known: resources/variation.vcf.gz
    # add more external VCFs as needed
    # cosmic: path/to/cosmic.vcf.gz
  dgidb:
    # annotate variants with drug interactions of affected genes
    activate: false
    # List of datasources for filtering dgidb entries
    # Available sources can be found on http://dgidb.org/api/v2/interaction_sources.json
    datasources:
      - DrugBank
  vep:
    # Consider removing --everything if VEP is slow for you (e.g. for WGS),
    # and think carefully about which annotations you need.
    candidate_calls:
      params: --everything --check_existing
      plugins:
        # Add any plugin from https://www.ensembl.org/info/docs/tools/vep/script/vep_plugins.html
        # Plugin args can be passed as well, e.g. "LoFtool,path/to/custom/scores.txt".
        - LoFtool
        - REVEL
    final_calls:
      params: --everything --check_existing

params:
  cutadapt: ""
  picard:
    MarkDuplicates: "--VALIDATION_STRINGENCY LENIENT"
  gatk:
    BaseRecalibrator: ""
    applyBQSR: ""
  varlociraptor:
    # add extra arguments for varlociraptor call
    # For example, in case of panel data consider to omit certain bias estimations
    # which might be misleading because all reads of an amplicon have the sample start
    # position, strand etc. (--omit-strand-bias, --omit-read-position-bias,
    # --omit-softclip-bias, --omit-read-orientation-bias).
    call: ""
    # Add extra arguments for varlociraptor preprocess. By default, we limit the depth to 200.
    # Increase this value for panel sequencing!
    preprocess: "--max-depth 200"
  freebayes:
    min_alternate_fraction: 0.05 # Reduce for calling variants with lower VAFs


custom_alignment_properties:
  activate: false
  column: "panel"
  tsv: "config/alignment_props.tsv"
